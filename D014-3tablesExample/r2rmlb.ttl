@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix ex: <http://example.com/ns#> .
@prefix emp: <http://example.com/emp#> .
@prefix dept: <http://example.com/dept#> .
@prefix likes: <http://example.com/likes#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@base <http://mappingpedia.org/rdb2rdf/r2rml/tc/> .


<TriplesMap1>
    a rr:TriplesMap;
    rr:logicalTable [ rr:sqlQuery """
       Select ('Department' || deptno) AS deptId
            , deptno
            , dname
            , loc
         from SA.DEPT
       """ ];

    rr:subjectMap [ rr:column "deptId"; rr:termType rr:BlankNode;
                    rr:class ex:dept; 
                    rr:graphMap [ rr:constant ex:DeptGraph; ];
                    rr:inverseExpression "{deptno} = substr({deptId},length('Department')+1)"];

    rr:predicateObjectMap
    [ 
      rr:predicateMap [ rr:constant dept:deptno ]; 
      rr:objectMap    [ rr:column "deptno"; rr:datatype xsd:positiveInteger ]
    ];

    rr:predicateObjectMap 
    [ 
      rr:predicateMap [ rr:constant dept:name ]; 
      rr:objectMap    [ rr:column "dname" ]
    ];

    rr:predicateObjectMap 
    [ 
      rr:predicateMap [ rr:constant dept:location ]; 
      rr:objectMap    [ rr:column "loc" ]
    ];

    rr:predicateObjectMap 
    [ 
      rr:predicateMap [ rr:constant dept:COMPANY ]; 
      rr:objectMap    [ rr:constant "EXAMPLE Corporation" ]
    ]
.

<TriplesMap2>
    a rr:TriplesMap;
    rr:logicalTable [ rr:sqlQuery """
       Select ('http://example.com/emp/' || empno) AS empURI
            , empno
            , ename
            , ('http://example.com/emp/job/'|| job) AS jobTypeURI
            , job
            , deptno
            , ('http://example.com/emp/etype/'|| etype) AS empTypeURI
            , etype
            , ('http://example.com/graph/'|| job || '/' || etype) AS graphURI
       from SA.EMP
       """ ];

    rr:subjectMap [ rr:column "empURI";
                    rr:class ex:emp; 
                    rr:graphMap [ rr:column "graphURI" ]; ];

    rr:predicateObjectMap 
    [ 
      rr:predicateMap [ rr:constant emp:jobtype ]; 
      rr:objectMap    [ rr:column "jobTypeURI" ]
    ];

    rr:predicateObjectMap 
    [ 
      rr:predicateMap [ rr:constant rdf:type ]; 
      rr:objectMap    [ rr:column "jobTypeURI" ]
    ];

    rr:predicateObjectMap 
    [ 
      rr:predicateMap [ rr:constant emp:emptype ]; 
      rr:objectMap    [ rr:column "empTypeURI" ]
    ];

    rr:predicateObjectMap 
    [ 
      rr:predicateMap [ rr:constant rdf:type ]; 
      rr:objectMap    [ rr:column "empTypeURI" ]
    ];

    rr:predicateObjectMap 
    [ 
      rr:predicateMap [ rr:constant emp:empno ]; 
      rr:objectMap    [ rr:column "empno" ]
    ];

    rr:predicateObjectMap 
    [ 
      rr:predicateMap [ rr:constant emp:name ]; 
      rr:objectMap    [ rr:column "ename" ]; 
      rr:graphMap     [ rr:constant emp:empNameGraph ];
    ];

    rr:predicateObjectMap 
    [ 
      rr:predicateMap [ rr:constant emp:job ]; 
      rr:objectMap    [ rr:column "job" ]
    ];

    rr:predicateObjectMap 
    [ 
      rr:predicateMap [ rr:constant emp:deptNum ]; 
      rr:objectMap    [ rr:column "deptno" ]
    ];

    rr:predicateObjectMap 
    [ 
      rr:predicateMap [ rr:constant emp:etype ]; 
      rr:objectMap    [ rr:column "etype" ]
    ];

    rr:predicateObjectMap [
      rr:predicateMap [ rr:constant emp:c_ref_deptno ];
      rr:refObjectMap    [
        rr:parentTriplesMap <TriplesMap1>;
        rr:joinCondition [
          rr:child "deptno";
          rr:parent "deptno";
        ];
      ];
    ]
    .